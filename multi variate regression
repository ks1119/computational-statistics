import pandas as  pd
import numpy as np
yr,yc=int(input("number of rows")),1
# 100 110 105 94 95 99 104 108 105 98 105 110
# rows 12
ym = list(map(int, input().split()))
y= np.array(ym).reshape(yr,yc)
print(y)

xr,xc=int(input("number of rows")),int(input("number of columns"))
# 1 9 62 1 8 58 1 7 64 1 14 60 1 12 63 1 10 57 1 7 55 1 4 56 1 6 59 1 5 61 1 7 57 1 6 60
# rows 12 columns 3
xm = list(map(int,input().split()))
x=np.array(xm).reshape(xr,xc)
print(x)

xt = np.transpose(x)
print(xt)
xtx = np.dot(xt,x)
print(xtx)
ixtx=np.linalg.inv(xtx)
print(ixtx)
xty=np.dot(xt,y)
print(xty)

b=np.dot(ixtx,xty)
print(b)

output:-
number of rows12
100 110 105 94 95 99 104 108 105 98 105 110
[[100]
 [110]
 [105]
 [ 94]
 [ 95]
 [ 99]
 [104]
 [108]
 [105]
 [ 98]
 [105]
 [110]]
 
 number of rows12
number of columns3
1 9 62 1 8 58 1 7 64 1 14 60 1 12 63 1 10 57 1 7 55 1 4 56 1 6 59 1 5 61 1 7 57 1 6 60
[[ 1  9 62]
 [ 1  8 58]
 [ 1  7 64]
 [ 1 14 60]
 [ 1 12 63]
 [ 1 10 57]
 [ 1  7 55]
 [ 1  4 56]
 [ 1  6 59]
 [ 1  5 61]
 [ 1  7 57]
 [ 1  6 60]]
 
 [[ 1  1  1  1  1  1  1  1  1  1  1  1]
 [ 9  8  7 14 12 10  7  4  6  5  7  6]
 [62 58 64 60 63 57 55 56 59 61 57 60]]
[[   12    95   712]
 [   95   845  5663]
 [  712  5663 42334]]
[[ 4.08944026e+01  1.14046520e-01 -7.03043891e-01]
 [ 1.14046520e-01  1.17514524e-02 -3.49009300e-03]
 [-7.03043891e-01 -3.49009300e-03  1.23147269e-02]]
[[ 1233]
 [ 9636]
 [73094]]

[[133.46048243]
 [ -1.24850346]
 [ -0.35100837]]
 
 observed values good fit:-
yc=[]
for i in range(int(xr)):
    s=b[0]+b[1]*x[i][1]+b[2]*x[i][2]
    yc.append(s)
yc=np.array(yc)
print(yc)

df=pd.read_excel("C:\\Users\\y20cs148\\Documents\\good_fit.xlsx")
df=pd.DataFrame(df)
df['observed']=y.tolist()
df['fitted']=yc.tolist()
dy=y-yc
df['error']=dy.tolist()
print(df)

output:-
[[100.46143226]
 [103.11396921]
 [102.25642243]
 [ 94.92093172]
 [ 96.36491352]
 [100.96797067]
 [105.41549778]
 [108.80999978]
 [105.25996775]
 [105.80645446]
 [104.71348104]
 [104.90895938]]

   observed                fitted                   error
0     [100]   [100.4614322634801]   [-0.4614322634801056]
1     [110]  [103.11396920766083]      [6.88603079233917]
2     [105]  [102.25642243378763]     [2.743577566212366]
3      [94]   [94.92093172229511]   [-0.9209317222951086]
4      [95]   [96.36491352079724]    [-1.364913520797245]
5      [99]  [100.96797066554791]   [-1.9679706655479094]
6     [104]  [105.41549778003616]   [-1.4154977800361621]
7     [108]  [108.80999977910824]   [-0.8099997791082387]
8     [105]  [105.25996774977375]  [-0.25996774977375026]
9      [98]  [105.80645446312212]    [-7.806454463122122]
10    [105]  [104.71348103642538]    [0.2865189635746219]
11    [110]  [104.90895937796836]     [5.091040622031642]

e=dy
et=np.transpose(e)
sse=np.dot(et,e)
print(sse)
sy=sum(y)
t=s/yr
print(sy)
print(t)
sst=0
for i in y:
    st=(i-t)**2
    sst+=st
print(sst)
ssr=sst-sse
print(ssr)
r2=ssr/sst
print(r2)if r2<0.9:
    print("we reject the model")
else:
    print("we accept the model")
    output:-
    [[151.41040622]]
[1233]
[102.75]
[330.25]
[[178.83959378]]
[[0.54152791]]
we reject the model
ddf=pd.read_excel("C:\\Users\\exam2\\Desktop\\python\\Book2.xlsx")
ddf=pd.DataFrame(ddf)
ddf["source of variation"]=["treatments","error","total"]
ddf["sum of squares"]=[ssr,sse,sst]
ddf["degrees of freedom"]=[xc-1,xr-xc,xr-1]
msr,mse=ssr/(xc-1),sse/(xr-xc)
ddf["mean sum of squares"]=[msr,mse,'----']
f=msr/mse
ddf["variance ratio"]=["---",f,"---"]
print(ddf) 
output:- source of variation          sum of squares  degrees of freedom  \
0          treatments  [[178.83959377968236]]                   2   
1               error  [[151.41040622031764]]                   9   
2               total                [330.25]                  11   

      mean sum of squares         variance ratio  
0   [[89.41979688984118]]                    ---  
1  [[16.823378468924183]]  [[5.315210440935849]]  
2                    ----                    ---  

